% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expression.R
\name{prepare_expression}
\alias{prepare_expression}
\title{Prepare expression}
\usage{
prepare_expression(expr, envir, db, function_value = NULL)
}
\arguments{
\item{expr}{A quoted expression consisting of a single function
call.}

\item{envir}{An environment to find variables local to the expression}

\item{db}{A database to store locals}

\item{function_value}{Optionally, the \emph{value} of a function
where the expression should involve an anonymous function.  In
this case the function in \code{expr} will be replaced.}
}
\description{
Prepare expression for evaluation in context
}
\details{
The \code{function_value} argument here is used where \code{expr} is
going to take a function that is not addressable by \emph{name}; in
that case we take a function itself (as "function_value"),
serialise it and replace the function call with the hash.  The
function will be serialised into the calling environment on
deserialisation.

This includes the remote possibility of a collision, but with the
size of the keyspace used for hashes hopefully it's negligable.

Because of the approach used here, \code{expr} can contain
anything; I'd suggest not saving the contents of the function
itself, but something like \code{NULL} will work just fine:

\preformatted{
  as.call(list(NULL, quote(a)))
  # NULL(a)
}
}

